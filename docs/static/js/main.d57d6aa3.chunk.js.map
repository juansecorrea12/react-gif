{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","placeholder","value","onChange","target","getGifs","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGift","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,mCACI,sBAAMC,SAXO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC1CN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,YAAY,YACZC,MAAOV,EACPW,SApBU,SAACR,GACvBF,EAAcE,EAAES,OAAOF,e,+BCPlBG,EAAO,uCAAG,WAAON,GAAP,uBAAAO,EAAA,4DACH,mCACVC,EAFa,uDACH,mCADG,cAEsDC,UAAUT,GAFhE,sBAIIU,MAAMF,GAJV,cAIbG,EAJa,gBAKIA,EAASC,OALb,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZR,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAqBtC,OAfAC,qBAAU,WACNvB,EAAQN,GACH8B,MAAK,SAAAC,GAEFC,YAAW,WAEPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAGZ,CAAC1B,IAEG2B,EDlB2BM,CAAajC,GAAjCmB,EAFuB,EAE7BN,KAAca,EAFe,EAEfA,QAEtB,OACI,qCACI,6BAAK1B,IACJ0B,GAAW,2CACZ,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAACC,GACR,OACI,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEb5BiB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,UAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAS9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ4C,EAAWpB,KAAI,SAACf,GACZ,OACI,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCjBrCoC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.d57d6aa3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types'; \n\nexport const AddCategory = ({setCategories}) => {\n\n    const [InputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(InputValue.trim().length > 2){\n            setCategories(category => [InputValue, ...category])\n            setInputValue('');\n        }\n    }\n\n    return (\n        <>\n            <form onSubmit = {handleSubmit}>\n                <input\n                    type='text'\n                    placeholder='Search...'\n                    value={InputValue}\n                    onChange={handleInputChange}\n                />\n            </form>\n        </>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\nexport const getGifs = async (category) => {\n    const api_key = 'AUYfUjLzmTejVnusChaG82T5URGGVJa7';\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${api_key}&q=${encodeURI(category)}&limit=10`;\n\n    const response = await fetch(url);\n    const { data } = await response.json();\n\n    const gifs = data.map((img) => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n}","import React from 'react';\n\nexport const GifGridItem = ({ id, title, url }) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}></img>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGift } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data: images, loading } = useFetchGift(category);\n\n    return (\n        <>\n            <h3>{category}</h3>\n            {loading && <p>loading...</p>}\n            <div className=\"body-card\">\n                {\n                    images.map((img) => {\n                        return(\n                            <GifGridItem\n                                key={img.id}\n                                {...img}\n                            />\n                        )\n                    })\n\n                }\n            </div>\n\n        </>\n    )\n}\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGift = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => {\n\n                setTimeout(() => {\n                    // console.log(imgs);\n                    setState({\n                        data: imgs,\n                        loading: false\n                    })\n                }, 3000);\n                \n            })\n    }, [category])\n\n    return state;\n}","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['gohan'])\n\n\n    // const handleAdd = () => {\n    //     setCategories([...categories, 'Hunter X'])\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr></hr>\n            <ol>\n                {\n                    categories.map((category) => {\n                        return (\n                            <GifGrid\n                                key={category}\n                                category={category}\n                            />\n                        )\n                    })\n                }\n            </ol>\n        </>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}